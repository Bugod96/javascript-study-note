React Hooks 
: a way to hook into the React state machine
: 함수형 컴포넌트에서 state에 접근할 수 있도록 해주는 기능.
: 함수형 프로그래밍의 기초.

=====================================================
useState : state & setState의 기능. state 설정 및 변경 기능
useEffect : componentDidMount & componentDidUpdate & componentWillUnmount의 기능. 
          : 컴포넌트 생성, 변화, 소멸시 특정 함수 실행. API에서 데이터 요청시 주로 사용.
useContext 

useRef : 컴포넌트의 특정 부분을 선택하고 조작하는 방법. 
       : 특정 html element를 선택하는 기능. document.querySelector()의 기능.
useReducer
useCallback
useMemo
useImperativeHandle 덜 중요
useLayoutEffect
useDebugValue 덜 중요

https://codesandbox.io/s/practical-curran-t64xr?file=/src/index.js
=====================================================
[활용방법]
- useInput : input 태그에 입력되는 내용 제약 + 이벤트 활용.
- useTabs : 메뉴 내비게이션 용도. 화면에 표시되는 정보 변경하는 방법. re-rendering

- useTitle : title 태그 업데이트 기능. 특정 html 태그의 내용 변경 기능.
- useClick : 특정 element에 대한 클릭 이벤트 핸들링. 해당 컴포넌트 소멸시 이벤트 클린업 기능.
- useHover : 특정 element 위에 마우스가 들어왔을 때에 대한 이벤트 핸들링 + 클린업.

- useConfirm : 사용자에게 질문하고 승인 여부에 따라 다른 함수 실행. (삭제, 변경 등)
- usePreventLeave : 사용자가 페이지를 벗어나려고 할 때를 감지. 
                  : 변경사항을 저장하지 않고 떠나는 등
                    API에 무언가를 보내는 도중에는 떠나지 못하도록 보호 활성화. 

- useBeforeLeave : 마우스가 해당 페이지를 벗어났을 때 특정 함수 실행.
                 : 페이지 떠나지 말라고 팝업 생성하는 등 

- useFadeIn : 컴포넌트가 서서히 나타나도록. 모든 element에 적용 가능한 fade in 애니메이션.
- useNetwork : navigator가 online/offline 상태가 변화했을 때 특정 함수 실행.

- useScroll : 스크롤 업/다운할 때를 감지. 
- useFullscreen : 모든 element에 적용 가능한 풀스크린 <-> 일반크기 모드

- useNotification : notification API를 활용하여 사용자에게 알림 기능.
- useAxios : HTTP 요청 클라이언트 axios 기능 활용.
