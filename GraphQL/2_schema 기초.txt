Schema 
: GraphQL 서버에 설정해놓는 사용자와 주고 받을 데이터에 대한 설명.

스키마 구조
1) typeDefs : queries. 설명. 데이터베이스로 요청하여 받을 데이터. get data (Read)
2) mutations : 설멍. 서버, 데이터베이스, 메모리의 데이터 변경 작업. mutate data. (Create, Upadate, Delete)
3) resolvers : 프로그래밍. Query에 대한 반응.

==============================================================
[index.js]
import { GraphQLServer } from "graphql-yoga";
import resolvers from "./graphql/resolvers";

const server = new GraphQLServer({
  typeDefs: "graphql/schema.graphql",        // "./graphql/schema.graphql"도 인식 가능.
  resolvers,                                 // resolvers:resolvers
});

server.start(() =>
  console.log("GraphQL Server Running on http://localhost:4000/")
);

====================================================================
[graphql/schema.graphql]
type Query {
  name: String!
}

====================================================================
[graphql/resolvers.js]
const resolvers = {
  Query: {
    name: () => "Response to name Query",
  },
}; 
export default resolvers;

====================================================================
