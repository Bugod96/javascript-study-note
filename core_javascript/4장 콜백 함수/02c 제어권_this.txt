[this] 
콜백함수 호출 시 콜백함수 내부에서의 this
- 기본적으로 콜백 함수의 this = 전역객체.
- 다만, 제어권을 넘겨받는 함수(메서드)에서 this값을 명시적으로 바인딩한 경우, 
        함수(메서드)에서 지정한 해당 값이 콜백 함수의 this 값이 됨.

---------------------------------------------------
<call/apply 메서드로 이해하는 콜백함수에 대한 this 값 바인딩 메커니즘>
 - map 메서드의 기본 구조: this 값 지정 메커니즘 위주로 구현.

Array.prototype.map = function (callback, thisArg) {
  var mappedArr = [];
  for (var i = 0; i < this.length; i++) {
    var mappedValue = callback.call(thisArg || window, this[i], i, this);
    mappedArr[i] = mappedValue;
  }
  return mappedArr;
};

var mappedValue = callback.call(thisArg || window, this[i], i, this);
- call 메서드의 첫번째 인자: thisArg || window
  - thisArg가 존재, 즉 this값을 지정했다면 그 값을 사용.
  - 지정하지 않았다면 전역객체 window를 this 값으로 사용.
- 나머지 인자들: this[i], i, this은 그대로 callback 함수의 인자들로 사용하고 
                 callback 함수 즉시 실행.

---------------------------------------------------
[from 3장 this/01d 콜백 함수 내부에서의 this.txt]
콜백 함수에게 제어권을 넘겨받는 함수들의 대표적인 예시
- setTimeout 함수
  - setTimeout 함수의 콜백함수의 this는 전역함수
- forEach 메서드
  - array.forEach 메서드의 콜백함수의 this를 별도로 지정 가능.
  - 별도의 인자로 this를 넘기지 않았으면 콜백함수의 this는 전역함수. 
- addEventListener 메서드
  - htmlElement.addEventListener 메서드의 this는 htmlElement,
    addEventListener 메서드의 콜백함수의 this도 htmlElement (그대로 상속)
