[01 클로저의 의미 및 원리 이해]

클로저 Closure
: 함수형 프로그래밍 언어의 보편적 특성. Javascript 고유의 개념은 아님.

A closure is the combination of a function bundled together (enclosed) 
with references to its surrounding state (the lexical environment). 
A closure gives you access to an outer function’s scope from an inner function. 
In JavaScript, closures are created every time a function is created, at function creation time.
(https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures)






















-----------------------------------------------------------
cf) 클로저에 대한 다양한 설명들
- 자신을 내포하는 함수의 컨텍스트에 접근할 수 있는 함수.
- 함수가 특정 스코프에 접근할 수 있도록 의도적으로 그 스코프에서 정의하는 것.
- 함수를 선언할 때 만들어지는 유효범위가 사라진 후에도 호출 가능한 함수.
- 이미 생명주기 상 끝난 외부 함수의 변수를 참조하는 함수.
- 자유변수가 있는 함수와 자유변수를 알 수 있는 환경의 결합.
- 로컬 변수를 참조하고 있는 함수 내의 함수.
- 자신이 생성될 때의 스코프에서 알 수 있었던 변수들 중 
  언젠가 자신이 실행될 때 사용할 변수들만을 기억하여 유지시키는 함수.



